<Window x:Class="GidonitApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GidonitApp"
        xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" 
        WindowStyle="None"
        Height="793"
        Width="1366"
        MaxWidth="11175"
        MaxHeight="793" 
        MinWidth="1366"
        MinHeight="793" 
        Icon="/!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!.png"
        Background="Transparent"
        AllowsTransparency="True" Closing="Window_Closing"
        
        
        >
    <Window.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#101724"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#101724" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#101724"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#101724"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="0">

                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="0">

                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Width="7" Fill="#494d74" RadiusX="3.5" RadiusY="3.5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="0*"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="myCheckboxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="/CB_norm.png" Width="10"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="/CB_checked.png"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="6" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid >
        <Grid.Style >
            <Style TargetType="Grid">
                <Setter Property="ShowGridLines" Value="False"/>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="768"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" MouseDown="MoveWindow">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1266*"/>
                <ColumnDefinition Width="25*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="25*"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>

            <Grid.Background>
                <ImageBrush  ImageSource="/TopPanel.png"/>
            </Grid.Background>

            <Button Grid.Column="3" Width="17" Height="17"  Foreground="White" BorderThickness="0" FontWeight="DemiBold" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" Click="closeWindow" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Close.png"/>
            </Button>
            <Button Grid.Column="1" Width="17" Height="17" Foreground="White" BorderThickness="0" FontWeight="DemiBold" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" Click="hideWindow" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF2E2969"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/hide.png"/>
            </Button>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="633*"/>
            </Grid.ColumnDefinitions>
            <Image x:Name="Background" Source="/Background.png" Grid.ColumnSpan="2"/>
            <Image  Visibility="Visible" x:Name="Dark" Grid.ColumnSpan="2" />
            <Grid Name="MinterMenu" Grid.Column="1">
                <Grid Name="MintModuleSettings" Visibility="Hidden">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="53*"/>
                        <ColumnDefinition Width="158*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="58*"/>
                            <RowDefinition Height="539*"/>
                            <RowDefinition Height="55*"/>
                            <RowDefinition Height="53*"/>
                            <RowDefinition Height="63*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="101*"/>
                            <ColumnDefinition Width="765*"/>
                            <ColumnDefinition Width="82*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="3" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="426*"/>
                                <ColumnDefinition Width="138*"/>
                                <ColumnDefinition Width="32*"/>
                                <ColumnDefinition Width="138*"/>
                                <ColumnDefinition Width="31*"/>
                            </Grid.ColumnDefinitions>
                            <Image Name="ConfimrmMint" Grid.Column="3" MouseLeftButtonUp="ConfimrmMint_MouseLeftButtonUp" >
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="ConfirmWallet.png"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Source" Value="ConfirmWallet_hover.png"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <Image Name="CancelMint" Grid.Column="1" MouseLeftButtonUp="CancelMint_MouseLeftButtonUp">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="CancelWallet.png"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>

                        </Grid>
                        <DataGrid RowBackground="Transparent" Grid.Row="1" Grid.Column="1" HeadersVisibility="Column" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.CanContentScroll="True"  CanUserResizeColumns="False" RowHeight="43" GridLinesVisibility="None"  BorderThickness="1,1,1,1" ColumnHeaderHeight="43" Background="Transparent" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" AutoGenerateColumns="False" IsReadOnly="True" EnableRowVirtualization="False" CanUserResizeRows="False" BorderBrush="{x:Null}" Name="ActiveWallets">
                            <DataGrid.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="#25222b"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>

                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="#25222b"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn x:Name="ADselected" Width="585">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Foreground="White"  Width="430" Height="20" IsReadOnly="True" TextAlignment="Center" MaxWidth="430" Background="Transparent" BorderBrush="Transparent" >
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Setter Property="Text" Value="{Binding hiddenAddr}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Text" Value="{Binding address}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter Property="Text" Value="{Binding address}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="250,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Address" FontSize="20" Foreground="White" HorizontalContentAlignment="Center"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="BalSelected" Width="160">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Foreground="White" Text="{Binding balance}" Width="80" Height="20" IsReadOnly="True" TextAlignment="Center" MaxWidth="80" Background="Transparent" BorderBrush="Transparent"  />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="40,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Balance" FontSize="20" Foreground="White"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="59*"/>
                            <RowDefinition Height="37*"/>
                            <RowDefinition Height="21*"/>
                            <RowDefinition Height="37*"/>
                            <RowDefinition Height="21*"/>
                            <RowDefinition Height="37*"/>
                            <RowDefinition Height="21*"/>
                            <RowDefinition Height="37*"/>
                            <RowDefinition Height="21*"/>
                            <RowDefinition Height="37*"/>
                            <RowDefinition Height="21*"/>
                            <RowDefinition Height="37*"/>
                            <RowDefinition Height="21*"/>
                            <RowDefinition Height="37*"/>
                            <RowDefinition Height="350*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="29*"/>
                            <ColumnDefinition Width="130*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Name="MintType"  Grid.Column="1" Grid.Row="1" SelectedIndex="0" >
                            <ComboBoxItem Name="Item1">Public</ComboBoxItem>
                            <ComboBoxItem Name="Item2">WL</ComboBoxItem>
                            <ComboBoxItem Name="Item3">OG</ComboBoxItem>

                        </ComboBox>
                        <Label Content="Select type of mint here" FontSize="10" Foreground="White" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox Name="MintPrice" Foreground="#dadada" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="3" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
                        <Label Content="Write here MintPrice" FontSize="10" Foreground="White" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox Text="100" Name="GasUP" Foreground="#dadada" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="5" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
                        <Label Content="Write here Gas Unit Price" FontSize="10" Foreground="White" Grid.Column="1" Grid.Row="6" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox Text="90000" Name="GasMax" Foreground="#dadada" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="7" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
                        <Label Content="Write here max gas amount" FontSize="10" Foreground="White" Grid.Column="1" Grid.Row="8" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox Name="ModAddr" Foreground="#dadada" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="9" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
                        <Label Content="Write here address of mint module(check guide)" FontSize="10" Foreground="White" Grid.Column="1" Grid.Row="10" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox Name="MintTime" Foreground="#dadada" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="11" Grid.Column="1" VerticalContentAlignment="Center" InputScope="Time"></TextBox>
                        <Label Content="Write here time, when to start(format: hh-mm-ss)" FontSize="10" Foreground="White" Grid.Column="1" Grid.Row="12" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox Name="CollectionName" Foreground="#dadada" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="13" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
                        <Label Content="Write here full name of collection" FontSize="10" Foreground="White" Grid.Column="1" Grid.Row="14" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2"/>
                    </Grid>
                </Grid>
                <Grid Name="MinterSelection" Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="118*"/>
                        <ColumnDefinition Width="1151*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="122*"/>
                        <RowDefinition Height="83*"/>
                        <RowDefinition Height="63*"/>
                        <RowDefinition Height="31*"/>
                        <RowDefinition Height="63*"/>
                        <RowDefinition Height="31*"/>
                        <RowDefinition Height="63*"/>
                        <RowDefinition Height="31*"/>
                        <RowDefinition Height="63*"/>
                        <RowDefinition Height="31*"/>
                        <RowDefinition Height="63*"/>
                        <RowDefinition Height="129*"/>
                    </Grid.RowDefinitions>
                    <Label FontSize="34" Content="Mint Modules Selection" Foreground="White" Grid.Row="1" Grid.Column="1"/>
                    <Image Name="Topaz" Grid.Row="2" Grid.Column="1"  Width="230" Height="63" MouseLeftButtonUp="MinterSelectorButton_click" HorizontalAlignment="Left">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="/TopazMinterButton.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="/TopazMinterButton_hover.png"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Name="Souffl3" Grid.Row="4" Grid.Column="1" Width="230" Height="63" MouseLeftButtonUp="MinterSelectorButton_click" HorizontalAlignment="Left">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="/Souffl3MinterButton.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="/Souffl3MinterButton_hover.png"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Name="Lmnft" Grid.Row="6" Grid.Column="1" Width="230" Height="63" MouseLeftButtonUp="MinterSelectorButton_click" HorizontalAlignment="Left">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="/LMNFTMinterButton.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="/LMNFTMinterButton_hover.png"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Name="BlueMove" Grid.Row="8" Grid.Column="1" Width="230" Height="63" MouseLeftButtonUp="MinterSelectorButton_click"  HorizontalAlignment="Left">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="/BlueMoveMinterButton.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="/BlueMoveMinterButton_hover.png"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Name="Candy" Grid.Row="10" Grid.Column="1" Width="230" Height="63" MouseLeftButtonUp="MinterSelectorButton_click" HorizontalAlignment="Left">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="/CandyMinterButton.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="/CandyMinterButton_hover.png"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
            </Grid>
            <Grid Name="SniperMenu"></Grid>
            <Grid x:Name="Menu_Buttons"  Grid.Column="0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="75*"/>
                    <RowDefinition Height="26*"/>
                    <RowDefinition Height="26*"/>
                    <RowDefinition Height="26*"/>
                    <RowDefinition Height="27*"/>
                    <RowDefinition Height="71*"/>
                </Grid.RowDefinitions>
                <Image  x:Name="Minter_bot" Grid.Row="1" Width="89" Height="94" MouseLeftButtonUp="Minter_bot_MouseLeftButtonUp">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="Minter_bot_button_menu1.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="Minter_bot_button_menu_hover.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image x:Name="Sniper" Grid.Row="2"  Width="50" Height="50" MouseLeftButtonUp="Sniper_MouseLeftButtonUp">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/sniperMenuButton.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="/sniperMenuButton_hover.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>

                </Image>
                <Image x:Name="Wallets" Grid.Row="3"  Width="50" Height="50" MouseLeftButtonUp="Wallets_MouseLeftButtonUp">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/wallets_button.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="/wallets_button_hover.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image x:Name="Settings" Grid.Row="4" Width="50" Height="50" MouseLeftButtonUp="Settings_MouseLeftButtonUp">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/settings.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="/settings_hover.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

            </Grid>
            <Grid x:Name="Wallets_Menu" Visibility="Visible"  Background="Transparent" Grid.Column="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="34*"/>
                        <RowDefinition Height="35*"/>
                        <RowDefinition Height="95*"/>
                        <RowDefinition Height="577*"/>
                        <RowDefinition Height="63*"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="Wallet_Manager_Buttons" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="219*"/>
                            <ColumnDefinition Width="133*"/>
                            <ColumnDefinition Width="21*"/>
                            <ColumnDefinition Width="133*"/>
                            <ColumnDefinition Width="21*"/>
                            <ColumnDefinition Width="133*"/>
                            <ColumnDefinition Width="21*"/>
                            <ColumnDefinition Width="133*"/>
                            <ColumnDefinition Width="21*"/>
                            <ColumnDefinition Width="133*"/>
                            <ColumnDefinition Width="21*"/>
                            <ColumnDefinition Width="133*"/>
                            <ColumnDefinition Width="148*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="ImportButton" Grid.Column="1" MouseLeftButtonUp="Add_wallets_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ImportButton.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ImportButton_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image x:Name="ExportButton" Grid.Column="3" MouseLeftButtonUp="exportWallets">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ExportButton.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ExportButton_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image x:Name="CollectButton" Grid.Column="5" MouseLeftButtonUp="Collect_wallets_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CollectWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CollectWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image x:Name="Distributton" Grid.Column="7" MouseLeftButtonUp="Distr_wallets_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="DistribWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="DistribWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image x:Name="GenButton" Grid.Column="9" MouseLeftButtonUp="Gen_wallets_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="GenWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="GenWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <Image Grid.Column="11" x:Name="RefreshBal" MouseLeftButtonUp="refreshBalance_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="/RefreshBal.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="/RefreshBal_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>

                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150*"/>
                            <ColumnDefinition Width="1067*"/>
                            <ColumnDefinition Width="50*"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid RowBackground="Transparent"  Grid.Column="1" HeadersVisibility="Column" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.CanContentScroll="True"  CanUserResizeColumns="False" x:Name="WalletsList" RowHeight="43" GridLinesVisibility="None"  BorderThickness="1,1,1,1" ColumnHeaderHeight="43" Background="Transparent" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" AutoGenerateColumns="False" IsReadOnly="True" EnableRowVirtualization="False" CanUserResizeRows="False" BorderBrush="{x:Null}" MaxHeight="577" Height="557"  >

                            <DataGrid.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="#25222b"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>

                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="#25222b"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn SortMemberPath="CB" x:Name="CBA" Width="43">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate >
                                            <CheckBox Style="{StaticResource myCheckboxStyle}"  IsChecked="{Binding CB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="16,0,0,0"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <CheckBox Style="{StaticResource myCheckboxStyle}" Margin="16,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Click="checkBox1_CheckedChanged" x:Name="checkBox1" />
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="Name" Width="170" SortMemberPath="name">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Foreground="White" Text="{Binding name}" Width="80" Height="20" IsReadOnly="True" TextAlignment="Center" MaxWidth="80" Background="Transparent" BorderBrush="Transparent" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="50,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Name" FontSize="20" Foreground="White"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="PK" Width="220" SortMemberPath="privateKey">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Foreground="White"  Width="180" Height="20" IsReadOnly="True" TextAlignment="Center" MaxWidth="345" Background="Transparent" BorderBrush="Transparent" >
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Setter Property="Text" Value="{Binding hiddenPK}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Text" Value="{Binding privateKey}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter Property="Text" Value="{Binding privateKey}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="60,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Private Key" FontSize="20" Foreground="White"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="AD" Width="220" SortMemberPath="address">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Foreground="White"  Width="180" Height="20" IsReadOnly="True" TextAlignment="Center" MaxWidth="345" Background="Transparent" BorderBrush="Transparent"  >
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Setter Property="Text" Value="{Binding hiddenAddr}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Text" Value="{Binding address}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter Property="Text" Value="{Binding address}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="70,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Address" FontSize="20" Foreground="White"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="NFT" Width="100" SortMemberPath="address">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Foreground="White" Text="{Binding NFT}" Width="80" Height="20" IsReadOnly="True" TextAlignment="Center" MaxWidth="80" Background="Transparent" BorderBrush="Transparent"  />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="28,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="NFT" FontSize="20" Foreground="White"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="BL" Width="160" SortMemberPath="balance">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Foreground="White" Text="{Binding balance}" Width="80" Height="20" IsReadOnly="True" TextAlignment="Center" MaxWidth="80" Background="Transparent" BorderBrush="Transparent"  />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="40,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Balance" FontSize="20" Foreground="White"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="53" SortMemberPath="send" x:Name="send" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image MouseLeftButtonUp="Send" Width="25" Height="25">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Setter Property="Source" Value="SendButton.png"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Source" Value="SendButton_hover.png"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="25,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="58" SortMemberPath="edit">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image MouseLeftButtonUp="Edit" Width="25" Height="25">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Setter Property="Source" Value="EditButton.png"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Source" Value="EditButton_hover.png"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="25,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="29" SortMemberPath="del">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image MouseLeftButtonUp="Del" Width="25" Height="25" >
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Setter Property="Source" Value="DelWallet.png"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Source" Value="DelWallet_hover.png"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.Header>
                                        <Label Margin="25,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </DataGridTemplateColumn.Header>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>

                        </DataGrid>


                    </Grid>

                </Grid>
                <StackPanel x:Name="AddingMenu" Visibility="Hidden" Width="580" Height="401"  Margin="0,20,0,0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/AddingMenu.png"/>
                    </StackPanel.Background>
                    <Grid>
                        <TextBox Foreground="White" Text=""  x:Name="PrivateKeyInput" Margin="35,112,42,-122" BorderThickness="0" MaxHeight="229" PreviewKeyDown="AddingText_PreviewKeyDown" AcceptsReturn="True" >
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>

                        <Image Height="25"  Margin="476,361,26,-167" Width="79" MouseLeftButtonUp="SubmitPrivateKey_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ConfirmWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ConfirmWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Height="25"  Margin="368,361,133,-167" Width="79" MouseLeftButtonUp="CancelAddingWallet_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CancelWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </StackPanel>
                <StackPanel x:Name="ExportMenu" Visibility="Hidden" Width="580" Height="401"  Margin="0,20,0,0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/ExportMenu.png"/>
                    </StackPanel.Background>
                    <Grid>
                        <TextBox Foreground="White" Text=""  x:Name="PrivateKeyExport" Margin="35,112,42,-122" BorderThickness="0" MaxHeight="229" AcceptsReturn="True" IsReadOnly="True" >
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>
                        <Image Height="25"  Margin="459,361,42,-167" Width="79" MouseLeftButtonUp="CancelExportWallet_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CancelWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </StackPanel>
                <StackPanel x:Name="editingWallet" Visibility="Hidden" Width="580" Height="401" Margin="0,20,0,0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/EditMenu.png"/>
                    </StackPanel.Background>
                    <Grid>
                        <TextBox Foreground="White" Height="25" TextWrapping="Wrap" Text="" Width="350" BorderBrush="{x:Null}" x:Name="newName" Margin="0,-150,0,0" IsUndoEnabled="False" PreviewKeyUp="newName_PreviewKeyUp">
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>

                        <Image Height="25"  Margin="454,350,0,0" Width="79" MouseLeftButtonUp="submitEdit_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ConfirmWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ConfirmWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Height="25"  Margin="261,350,0,0" Width="79" MouseLeftButtonUp="cancelEdit_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CancelWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </StackPanel>
                <StackPanel x:Name="generatingWallets" Visibility="Hidden"  Width="580" Height="401"  Margin="0,20,0,0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/GeneratingMenu.png"/>
                    </StackPanel.Background>
                    <Grid>
                        <TextBox Foreground="White" Height="25" TextWrapping="Wrap" Text="" Width="350" BorderBrush="{x:Null}" x:Name="countOfWallets"  Margin="0,-150,0,0" IsUndoEnabled="False" PreviewKeyUp="countOfWallets_PreviewKeyUp">
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>

                        <Image Height="25"  Margin="454,350,0,0" Width="79" MouseLeftButtonUp="submitGen_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ConfirmWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ConfirmWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Height="25"  Margin="261,350,0,0" Width="79" MouseLeftButtonUp="cancelGen_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CancelWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </StackPanel>
                <StackPanel x:Name="distribMenu" Visibility="Hidden"  Width="580" Height="401"  Margin="0,20,0,0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/DistribMenu.png"/>
                    </StackPanel.Background>
                    <Grid>
                        <TextBox Foreground="White" Height="25" Text="" Width="420" BorderBrush="{x:Null}" x:Name="privateKeyForDistrib" Margin="0,0,85,200" PreviewKeyUp="privateKeyForDistrib_PreviewKeyUp">
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>
                        <TextBox Foreground="White" Height="25" Text="" Width="420" BorderBrush="{x:Null}" x:Name="amountDistrib" Margin="0,100,85,0" PreviewKeyUp="privateKeyForDistrib_PreviewKeyUp">
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>
                        <Label Content="Invalid amount" x:Name="invalidAmount" Margin="38,275,356,-164" Foreground="#FFFF5757" Visibility="Hidden"/>
                        <Label Content="Invalid private key" x:Name="PrivateKeyErrorDistr" Margin="38,111,0,0" Foreground="#FFFF5757" Visibility="Hidden"/>
                        <Label Content="Insufficient funds" x:Name="insufficientFunds" Margin="38,255,356,-129" Foreground="#FFFF5757" Visibility="Hidden"/>
                        <Image Height="25"  Margin="454,350,0,0" Width="79" MouseLeftButtonUp="confirmDistrib_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ConfirmWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ConfirmWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Height="25"  Margin="261,350,0,0" Width="79" MouseLeftButtonUp="cancelDistrib_click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CancelWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </StackPanel>
                <StackPanel x:Name="sendingMenu" Visibility="Hidden" Width="580" Height="401" Margin="0,20,0,0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/SendingMenu.png"/>
                    </StackPanel.Background>
                    <Grid>
                        <TextBox Foreground="White"  Height="25" Text="" Width="420" BorderBrush="{x:Null}" x:Name="addressForSend" Margin="0,0,85,200" PreviewKeyUp="addressForSend_PreviewKeyUp">
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>
                        <TextBox Foreground="White" Height="25" Text="" Width="420" BorderBrush="{x:Null}" x:Name="amountSend" Margin="0,100,85,0" PreviewKeyUp="addressForSend_PreviewKeyUp">
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>
                        <Label Content="Invalid amount" x:Name="invalidAmountSend" Margin="37,249,357,-138" Foreground="#FFFF5757" Visibility="Hidden"/>
                        <Label Content="Invalid address" x:Name="AddressErrorSend" Margin="37,106,10,5" Foreground="#FFFF5757" Visibility="Hidden"/>
                        <Label Content="Insufficient funds" x:Name="insufficientFundsSend" Margin="37,264,357,-138" Foreground="#FFFF5757" Visibility="Hidden"/>
                        <Image Height="25"  Margin="454,350,0,0" Width="79" MouseLeftButtonUp="confirmSend_click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ConfirmWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ConfirmWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Height="25"  Margin="261,350,0,0" Width="79" MouseLeftButtonUp="cancelSend_click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CancelWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </StackPanel>
                <StackPanel x:Name="collectMenu" Visibility="Hidden"  Width="580" Height="401" Margin="0,20,0,0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/CollectMenu.png"/>
                    </StackPanel.Background>
                    <Grid>
                        <TextBox Foreground="White" Height="25" Text="" Width="420" BorderBrush="{x:Null}" x:Name="collectAddress" Margin="28,68,132,281" PreviewKeyUp="collectAddress_PreviewKeyUp"  >
                            <TextBox.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" ColorInterpolationMode="SRgbLinearInterpolation" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStop Color="#0c0a24"/>
                                    <GradientStop Color="#280d30" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>
                        <Label Content="Invalid address" x:Name="invalidAddressCollect" Margin="28,105,26,10" Foreground="#FFFF5757" Visibility="Hidden"/>

                        <Image Height="25"  Margin="454,350,0,0" Width="79" MouseLeftButtonUp="confirmCollect_Click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="ConfirmWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="ConfirmWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Height="25"  Margin="261,350,0,0" Width="79" MouseLeftButtonUp="cancelCollect_click">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="CancelWallet.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="CancelWallet_hover.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </StackPanel>


            </Grid>
            <Grid x:Name="SettingsMenu" Visibility="Hidden" Background="Transparent" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="116*"/>
                    <ColumnDefinition Width="177*"/>
                    <ColumnDefinition Width="472*"/>
                    <ColumnDefinition Width="29*"/>
                    <ColumnDefinition Width="198*"/>
                    <ColumnDefinition Width="273*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="105*"/>
                    <RowDefinition Height="69*"/>
                    <RowDefinition Height="59*"/>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="72*"/>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="362*"/>
                </Grid.RowDefinitions>
                <Label Foreground="#dadada" FontSize="34" Content="Settings" Grid.Row="1" Grid.Column="1"/>
                <Label Foreground="#dadada" FontSize="20" Content="Holder Verification" Grid.Row="2" Grid.Column="1"/>
                <Label Foreground="#dadada" FontSize="16" Content="Auth Wallet" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="38,0,0,0"/>
                <Label Foreground="#dadada" FontSize="16" Content="Node" Grid.Row="5" Grid.Column="1"  VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="36,0,0,0"/>
                <TextBox Foreground="#dadada" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="3" Grid.Column="2" x:Name="AuthWallet" VerticalContentAlignment="Center"/>
                <TextBox Foreground="#fafafa" FontSize="16" Style="{DynamicResource TextBoxStyle1}" Background="Transparent" BorderBrush="#26262b" Grid.Row="5" Grid.Column="2" x:Name="NodeInput" VerticalContentAlignment="Center"/>
                <Image Grid.Row="3" Grid.Column="4" Name="SetNewPrivateKey" MouseLeftButtonUp="SetNewPrivateKey_MouseLeftButtonUp">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="SetNewPrivateKey.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="SetNewPrivateKey_hover.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image Grid.Row="5" Grid.Column="4" Name="SetNode" MouseLeftButtonUp="SetNode_MouseLeftButtonUp">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="SetNode.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="SetNode_hover.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

            </Grid>
            <Image x:Name="HolderNotVerified" Source="/HolderNotVerified.png" Grid.ColumnSpan="6" Margin="0,0,-100,0" Grid.RowSpan="7"/>
        </Grid>
    </Grid>
</Window>
    
